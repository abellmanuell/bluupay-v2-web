/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SettingsRouteRouteImport } from './routes/settings/route'
import { Route as AuthRouteRouteImport } from './routes/_auth/route'
import { Route as AppRouteRouteImport } from './routes/_app/route'
import { Route as ChatIndexRouteImport } from './routes/chat/index'
import { Route as AppsIndexRouteImport } from './routes/apps/index'
import { Route as AppIndexRouteImport } from './routes/_app/index'
import { Route as AuthRegisterRouteImport } from './routes/_auth/register'
import { Route as AuthOtpRouteImport } from './routes/_auth/otp'
import { Route as AuthLoginRouteImport } from './routes/_auth/login'
import { Route as AuthForgotRouteImport } from './routes/_auth/forgot'
import { Route as AppProfileRouteImport } from './routes/_app/profile'
import { Route as AppsPosIndexRouteImport } from './routes/apps/pos/index'
import { Route as AppDashboardsIndexRouteImport } from './routes/_app/dashboards/index'
import { Route as AppBanking1IndexRouteImport } from './routes/_app/banking-1/index'
import { Route as SettingsSectionsSessionsRouteImport } from './routes/settings/_sections/Sessions'
import { Route as SettingsSectionsNotificationsRouteImport } from './routes/settings/_sections/Notifications'
import { Route as SettingsSectionsGeneralRouteImport } from './routes/settings/_sections/General'
import { Route as SettingsSectionsBillingRouteImport } from './routes/settings/_sections/Billing'
import { Route as SettingsSectionsApplicationsRouteImport } from './routes/settings/_sections/Applications'
import { Route as SettingsSectionsAppearanceRouteImport } from './routes/settings/_sections/Appearance'

const SettingsRouteRoute = SettingsRouteRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRouteRoute = AuthRouteRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AppRouteRoute = AppRouteRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRouteImport,
} as any)
const ChatIndexRoute = ChatIndexRouteImport.update({
  id: '/chat/',
  path: '/chat/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppsIndexRoute = AppsIndexRouteImport.update({
  id: '/apps/',
  path: '/apps/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppIndexRoute = AppIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRouteRoute,
} as any)
const AuthRegisterRoute = AuthRegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthOtpRoute = AuthOtpRouteImport.update({
  id: '/otp',
  path: '/otp',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthForgotRoute = AuthForgotRouteImport.update({
  id: '/forgot',
  path: '/forgot',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AppProfileRoute = AppProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppsPosIndexRoute = AppsPosIndexRouteImport.update({
  id: '/apps/pos/',
  path: '/apps/pos/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppDashboardsIndexRoute = AppDashboardsIndexRouteImport.update({
  id: '/dashboards/',
  path: '/dashboards/',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppBanking1IndexRoute = AppBanking1IndexRouteImport.update({
  id: '/banking-1/',
  path: '/banking-1/',
  getParentRoute: () => AppRouteRoute,
} as any)
const SettingsSectionsSessionsRoute =
  SettingsSectionsSessionsRouteImport.update({
    id: '/_sections/Sessions',
    path: '/Sessions',
    getParentRoute: () => SettingsRouteRoute,
  } as any)
const SettingsSectionsNotificationsRoute =
  SettingsSectionsNotificationsRouteImport.update({
    id: '/_sections/Notifications',
    path: '/Notifications',
    getParentRoute: () => SettingsRouteRoute,
  } as any)
const SettingsSectionsGeneralRoute = SettingsSectionsGeneralRouteImport.update({
  id: '/_sections/General',
  path: '/General',
  getParentRoute: () => SettingsRouteRoute,
} as any)
const SettingsSectionsBillingRoute = SettingsSectionsBillingRouteImport.update({
  id: '/_sections/Billing',
  path: '/Billing',
  getParentRoute: () => SettingsRouteRoute,
} as any)
const SettingsSectionsApplicationsRoute =
  SettingsSectionsApplicationsRouteImport.update({
    id: '/_sections/Applications',
    path: '/Applications',
    getParentRoute: () => SettingsRouteRoute,
  } as any)
const SettingsSectionsAppearanceRoute =
  SettingsSectionsAppearanceRouteImport.update({
    id: '/_sections/Appearance',
    path: '/Appearance',
    getParentRoute: () => SettingsRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/settings': typeof SettingsRouteRouteWithChildren
  '/profile': typeof AppProfileRoute
  '/forgot': typeof AuthForgotRoute
  '/login': typeof AuthLoginRoute
  '/otp': typeof AuthOtpRoute
  '/register': typeof AuthRegisterRoute
  '/': typeof AppIndexRoute
  '/apps': typeof AppsIndexRoute
  '/chat': typeof ChatIndexRoute
  '/settings/Appearance': typeof SettingsSectionsAppearanceRoute
  '/settings/Applications': typeof SettingsSectionsApplicationsRoute
  '/settings/Billing': typeof SettingsSectionsBillingRoute
  '/settings/General': typeof SettingsSectionsGeneralRoute
  '/settings/Notifications': typeof SettingsSectionsNotificationsRoute
  '/settings/Sessions': typeof SettingsSectionsSessionsRoute
  '/banking-1': typeof AppBanking1IndexRoute
  '/dashboards': typeof AppDashboardsIndexRoute
  '/apps/pos': typeof AppsPosIndexRoute
}
export interface FileRoutesByTo {
  '/settings': typeof SettingsRouteRouteWithChildren
  '/profile': typeof AppProfileRoute
  '/forgot': typeof AuthForgotRoute
  '/login': typeof AuthLoginRoute
  '/otp': typeof AuthOtpRoute
  '/register': typeof AuthRegisterRoute
  '/': typeof AppIndexRoute
  '/apps': typeof AppsIndexRoute
  '/chat': typeof ChatIndexRoute
  '/settings/Appearance': typeof SettingsSectionsAppearanceRoute
  '/settings/Applications': typeof SettingsSectionsApplicationsRoute
  '/settings/Billing': typeof SettingsSectionsBillingRoute
  '/settings/General': typeof SettingsSectionsGeneralRoute
  '/settings/Notifications': typeof SettingsSectionsNotificationsRoute
  '/settings/Sessions': typeof SettingsSectionsSessionsRoute
  '/banking-1': typeof AppBanking1IndexRoute
  '/dashboards': typeof AppDashboardsIndexRoute
  '/apps/pos': typeof AppsPosIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_app': typeof AppRouteRouteWithChildren
  '/_auth': typeof AuthRouteRouteWithChildren
  '/settings': typeof SettingsRouteRouteWithChildren
  '/_app/profile': typeof AppProfileRoute
  '/_auth/forgot': typeof AuthForgotRoute
  '/_auth/login': typeof AuthLoginRoute
  '/_auth/otp': typeof AuthOtpRoute
  '/_auth/register': typeof AuthRegisterRoute
  '/_app/': typeof AppIndexRoute
  '/apps/': typeof AppsIndexRoute
  '/chat/': typeof ChatIndexRoute
  '/settings/_sections/Appearance': typeof SettingsSectionsAppearanceRoute
  '/settings/_sections/Applications': typeof SettingsSectionsApplicationsRoute
  '/settings/_sections/Billing': typeof SettingsSectionsBillingRoute
  '/settings/_sections/General': typeof SettingsSectionsGeneralRoute
  '/settings/_sections/Notifications': typeof SettingsSectionsNotificationsRoute
  '/settings/_sections/Sessions': typeof SettingsSectionsSessionsRoute
  '/_app/banking-1/': typeof AppBanking1IndexRoute
  '/_app/dashboards/': typeof AppDashboardsIndexRoute
  '/apps/pos/': typeof AppsPosIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/settings'
    | '/profile'
    | '/forgot'
    | '/login'
    | '/otp'
    | '/register'
    | '/'
    | '/apps'
    | '/chat'
    | '/settings/Appearance'
    | '/settings/Applications'
    | '/settings/Billing'
    | '/settings/General'
    | '/settings/Notifications'
    | '/settings/Sessions'
    | '/banking-1'
    | '/dashboards'
    | '/apps/pos'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/settings'
    | '/profile'
    | '/forgot'
    | '/login'
    | '/otp'
    | '/register'
    | '/'
    | '/apps'
    | '/chat'
    | '/settings/Appearance'
    | '/settings/Applications'
    | '/settings/Billing'
    | '/settings/General'
    | '/settings/Notifications'
    | '/settings/Sessions'
    | '/banking-1'
    | '/dashboards'
    | '/apps/pos'
  id:
    | '__root__'
    | '/_app'
    | '/_auth'
    | '/settings'
    | '/_app/profile'
    | '/_auth/forgot'
    | '/_auth/login'
    | '/_auth/otp'
    | '/_auth/register'
    | '/_app/'
    | '/apps/'
    | '/chat/'
    | '/settings/_sections/Appearance'
    | '/settings/_sections/Applications'
    | '/settings/_sections/Billing'
    | '/settings/_sections/General'
    | '/settings/_sections/Notifications'
    | '/settings/_sections/Sessions'
    | '/_app/banking-1/'
    | '/_app/dashboards/'
    | '/apps/pos/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AppRouteRoute: typeof AppRouteRouteWithChildren
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  SettingsRouteRoute: typeof SettingsRouteRouteWithChildren
  AppsIndexRoute: typeof AppsIndexRoute
  ChatIndexRoute: typeof ChatIndexRoute
  AppsPosIndexRoute: typeof AppsPosIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/chat/': {
      id: '/chat/'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof ChatIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/apps/': {
      id: '/apps/'
      path: '/apps'
      fullPath: '/apps'
      preLoaderRoute: typeof AppsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_auth/register': {
      id: '/_auth/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof AuthRegisterRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/otp': {
      id: '/_auth/otp'
      path: '/otp'
      fullPath: '/otp'
      preLoaderRoute: typeof AuthOtpRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/forgot': {
      id: '/_auth/forgot'
      path: '/forgot'
      fullPath: '/forgot'
      preLoaderRoute: typeof AuthForgotRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_app/profile': {
      id: '/_app/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AppProfileRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/apps/pos/': {
      id: '/apps/pos/'
      path: '/apps/pos'
      fullPath: '/apps/pos'
      preLoaderRoute: typeof AppsPosIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/dashboards/': {
      id: '/_app/dashboards/'
      path: '/dashboards'
      fullPath: '/dashboards'
      preLoaderRoute: typeof AppDashboardsIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/banking-1/': {
      id: '/_app/banking-1/'
      path: '/banking-1'
      fullPath: '/banking-1'
      preLoaderRoute: typeof AppBanking1IndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/settings/_sections/Sessions': {
      id: '/settings/_sections/Sessions'
      path: '/Sessions'
      fullPath: '/settings/Sessions'
      preLoaderRoute: typeof SettingsSectionsSessionsRouteImport
      parentRoute: typeof SettingsRouteRoute
    }
    '/settings/_sections/Notifications': {
      id: '/settings/_sections/Notifications'
      path: '/Notifications'
      fullPath: '/settings/Notifications'
      preLoaderRoute: typeof SettingsSectionsNotificationsRouteImport
      parentRoute: typeof SettingsRouteRoute
    }
    '/settings/_sections/General': {
      id: '/settings/_sections/General'
      path: '/General'
      fullPath: '/settings/General'
      preLoaderRoute: typeof SettingsSectionsGeneralRouteImport
      parentRoute: typeof SettingsRouteRoute
    }
    '/settings/_sections/Billing': {
      id: '/settings/_sections/Billing'
      path: '/Billing'
      fullPath: '/settings/Billing'
      preLoaderRoute: typeof SettingsSectionsBillingRouteImport
      parentRoute: typeof SettingsRouteRoute
    }
    '/settings/_sections/Applications': {
      id: '/settings/_sections/Applications'
      path: '/Applications'
      fullPath: '/settings/Applications'
      preLoaderRoute: typeof SettingsSectionsApplicationsRouteImport
      parentRoute: typeof SettingsRouteRoute
    }
    '/settings/_sections/Appearance': {
      id: '/settings/_sections/Appearance'
      path: '/Appearance'
      fullPath: '/settings/Appearance'
      preLoaderRoute: typeof SettingsSectionsAppearanceRouteImport
      parentRoute: typeof SettingsRouteRoute
    }
  }
}

interface AppRouteRouteChildren {
  AppProfileRoute: typeof AppProfileRoute
  AppIndexRoute: typeof AppIndexRoute
  AppBanking1IndexRoute: typeof AppBanking1IndexRoute
  AppDashboardsIndexRoute: typeof AppDashboardsIndexRoute
}

const AppRouteRouteChildren: AppRouteRouteChildren = {
  AppProfileRoute: AppProfileRoute,
  AppIndexRoute: AppIndexRoute,
  AppBanking1IndexRoute: AppBanking1IndexRoute,
  AppDashboardsIndexRoute: AppDashboardsIndexRoute,
}

const AppRouteRouteWithChildren = AppRouteRoute._addFileChildren(
  AppRouteRouteChildren,
)

interface AuthRouteRouteChildren {
  AuthForgotRoute: typeof AuthForgotRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthOtpRoute: typeof AuthOtpRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthForgotRoute: AuthForgotRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthOtpRoute: AuthOtpRoute,
  AuthRegisterRoute: AuthRegisterRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

interface SettingsRouteRouteChildren {
  SettingsSectionsAppearanceRoute: typeof SettingsSectionsAppearanceRoute
  SettingsSectionsApplicationsRoute: typeof SettingsSectionsApplicationsRoute
  SettingsSectionsBillingRoute: typeof SettingsSectionsBillingRoute
  SettingsSectionsGeneralRoute: typeof SettingsSectionsGeneralRoute
  SettingsSectionsNotificationsRoute: typeof SettingsSectionsNotificationsRoute
  SettingsSectionsSessionsRoute: typeof SettingsSectionsSessionsRoute
}

const SettingsRouteRouteChildren: SettingsRouteRouteChildren = {
  SettingsSectionsAppearanceRoute: SettingsSectionsAppearanceRoute,
  SettingsSectionsApplicationsRoute: SettingsSectionsApplicationsRoute,
  SettingsSectionsBillingRoute: SettingsSectionsBillingRoute,
  SettingsSectionsGeneralRoute: SettingsSectionsGeneralRoute,
  SettingsSectionsNotificationsRoute: SettingsSectionsNotificationsRoute,
  SettingsSectionsSessionsRoute: SettingsSectionsSessionsRoute,
}

const SettingsRouteRouteWithChildren = SettingsRouteRoute._addFileChildren(
  SettingsRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  AppRouteRoute: AppRouteRouteWithChildren,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  SettingsRouteRoute: SettingsRouteRouteWithChildren,
  AppsIndexRoute: AppsIndexRoute,
  ChatIndexRoute: ChatIndexRoute,
  AppsPosIndexRoute: AppsPosIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
